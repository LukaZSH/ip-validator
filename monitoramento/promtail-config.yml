server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Apache Access Logs - IP Validator Web Container
  - job_name: apache_access
    static_configs:
      - targets:
          - localhost
        labels:
          job: apache_access
          service: ip-validator
          environment: production
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{job="apache_access"} |~ "^\\d+\\.\\d+\\.\\d+\\.\\d+"'
          stages:
          - regex:
              expression: '^(?P<remote_addr>\S+) (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<request_uri>\S+) (?P<server_protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
          - timestamp:
              source: time_local
              format: '02/Jan/2006:15:04:05 -0700'
          - labels:
              method:
              status:
              remote_addr:
              request_uri:

  # MySQL Database Logs
  - job_name: mysql_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: mysql_logs
          service: ip-validator-db
          environment: production
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{job="mysql_logs"}'
          stages:
          # Filter for MySQL container logs
          - match:
              selector: '{job="mysql_logs"} |~ "mysqld|mysql"'
              stages:
              - regex:
                  expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z) (?P<level>\w+) (?P<message>.*)'
              - labels:
                  level:
          # Capture slow query logs specifically
          - match:
              selector: '{job="mysql_logs"} |~ "Query_time|Lock_time"'
              stages:
              - regex:
                  expression: '# Query_time: (?P<query_time>[\d.]+)  Lock_time: (?P<lock_time>[\d.]+)'
              - labels:
                  log_type: "slow_query"

  # PHP Application Logs (Including Error Logs)
  - job_name: php_app
    static_configs:
      - targets:
          - localhost
        labels:
          job: php_app
          service: ip-validator
          environment: production
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{job="php_app"}'
          stages:
          # PHP Error Logs
          - match:
              selector: '{job="php_app"} |~ "PHP|ERROR|WARN|FATAL"'
              stages:
              - regex:
                  expression: '\[(?P<timestamp>[^\]]+)\] (?P<level>\w+): (?P<message>.*)'
              - labels:
                  level:
                  log_type: "php_error"
          # Application-specific logs (login attempts, etc)
          - match:
              selector: '{job="php_app"} |~ "authentication|login|presence|qr_code"'
              stages:
              - json:
                  expressions:
                    event: event
                    status: status
                    ip: ip
                    username: username
              - labels:
                  event:
                  status:
                  log_type: "app_event"

  # Container Health and Generic Logs
  - job_name: container_health
    static_configs:
      - targets:
          - localhost
        labels:
          job: container_health
          environment: production
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - docker: {}
      - json:
          expressions:
            output: log
            stream: stream
            attrs: attrs
      - json:
          expressions:
            tag: attrs.tag
          source: attrs
      - regex:
          expression: '(?P<container_name>(?:[^|]*))\|'
          source: tag
      - match:
          selector: '{container_name=~"ip-validator.*|mysql.*|grafana.*|loki.*|promtail.*"}'
          stages:
          - regex:
              expression: '(?P<container_service>ip-validator|mysql|grafana|loki|promtail)'
              source: container_name
          - labels:
              container_service:
              stream:
      # Capture container restart events
      - match:
          selector: '{job="container_health"} |~ "restart|started|stopped|exited"'
          stages:
          - labels:
              event_type: "container_lifecycle"
      - output:
          source: output

  # Grafana Logs
  - job_name: grafana_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: grafana_logs
          service: grafana
          environment: production
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{job="grafana_logs"}'
          stages:
          - match:
              selector: '{job="grafana_logs"} |~ "lvl=|level="'
              stages:
              - regex:
                  expression: 'lvl=(?P<level>\w+)|level=(?P<level>\w+)'
              - labels:
                  level:

  # Loki Logs
  - job_name: loki_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: loki_logs
          service: loki
          environment: production
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - docker: {}
      - match:
          selector: '{job="loki_logs"}'
          stages:
          - match:
              selector: '{job="loki_logs"} |~ "level=|ts="'
              stages:
              - regex:
                  expression: 'level=(?P<level>\w+)'
              - labels:
                  level: